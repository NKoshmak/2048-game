{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = initialState;\n        this.state = this.cloneState(this.initialState);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            // --- Main Methods ---\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.addRandomTile();\n                    this.addRandomTile();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.cloneState(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.handleMove(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.handleMove(\"down\");\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.handleMove(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.handleMove(\"right\");\n            }\n        },\n        {\n            // --- Additional Methods ---\n            key: \"handleMove\",\n            value: function handleMove(direction) {\n                if (this.status !== \"playing\") return;\n                var moved = this.slide(direction);\n                if (moved) {\n                    this.addRandomTile();\n                    this.updateGameStatus();\n                }\n            }\n        },\n        {\n            key: \"cloneState\",\n            value: function cloneState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyTiles = this.findEmptyTiles();\n                if (emptyTiles.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyTiles.length);\n                    var _emptyTiles_randomIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyTiles[randomIndex], 2), row = _emptyTiles_randomIndex[0], column = _emptyTiles_randomIndex[1];\n                    this.state[row][column] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"findEmptyTiles\",\n            value: function findEmptyTiles() {\n                var emptyTiles = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 0) emptyTiles.push([\n                        row,\n                        col\n                    ]);\n                }\n                return emptyTiles;\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(direction) {\n                var originalState = this.cloneState(this.state);\n                switch(direction){\n                    case \"left\":\n                        this.state = this.slideLeft(this.state);\n                        break;\n                    case \"right\":\n                        this.state = this.slideRight(this.state);\n                        break;\n                    case \"up\":\n                        this.state = this.transpose(this.slideLeft(this.transpose(this.state)));\n                        break;\n                    case \"down\":\n                        this.state = this.transpose(this.slideRight(this.transpose(this.state)));\n                        break;\n                }\n                return !this.areStatesEqual(this.state, originalState);\n            }\n        },\n        {\n            key: \"slideLeft\",\n            value: function slideLeft(state) {\n                var _this = this;\n                return state.map(function(row) {\n                    return _this.processRow(row, true);\n                });\n            }\n        },\n        {\n            key: \"slideRight\",\n            value: function slideRight(state) {\n                var _this = this;\n                return state.map(function(row) {\n                    return _this.processRow(row, false);\n                });\n            }\n        },\n        {\n            key: \"processRow\",\n            value: function processRow(row, isLeft) {\n                var rowCopy = isLeft ? row : (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n                var newRow = this.mergeTiles(rowCopy.filter(function(n) {\n                    return n !== 0;\n                }));\n                while(newRow.length < 4)newRow.push(0);\n                return isLeft ? newRow : newRow.reverse();\n            }\n        },\n        {\n            key: \"mergeTiles\",\n            value: function mergeTiles(row) {\n                for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1]) {\n                    row[i] *= 2;\n                    row[i + 1] = 0;\n                    this.score += row[i];\n                }\n                return row.filter(function(n) {\n                    return n !== 0;\n                });\n            }\n        },\n        {\n            key: \"areStatesEqual\",\n            value: function areStatesEqual(state1, state2) {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (state1[row][col] !== state2[row][col]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(state) {\n                var transposed = [];\n                for(var col = 0; col < 4; col++){\n                    transposed[col] = [];\n                    for(var row = 0; row < 4; row++)transposed[col].push(state[row][col]);\n                }\n                return transposed;\n            }\n        },\n        {\n            // --- Game Status Updates ---\n            key: \"updateGameStatus\",\n            value: function updateGameStatus() {\n                if (this.hasReached2048()) {\n                    this.status = \"win\";\n                    return;\n                }\n                if (!this.hasEmptyCells() && !this.canMergeTiles()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"hasReached2048\",\n            value: function hasReached2048() {\n                return this.state.some(function(row) {\n                    return row.includes(2048);\n                });\n            }\n        },\n        {\n            key: \"hasEmptyCells\",\n            value: function hasEmptyCells() {\n                return this.state.some(function(row) {\n                    return row.includes(0);\n                });\n            }\n        },\n        {\n            key: \"canMergeTiles\",\n            value: function canMergeTiles() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var tile = this.state[row][col];\n                    if (col < 3 && tile === this.state[row][col + 1] || row < 3 && tile === this.state[row + 1][col]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nfunction $197cd56b15c33885$var$render() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    // render game cells\n    var i = 0;\n    for(var row = 0; row < 4; row++){\n        for(var column = 0; column < 4; column++){\n            var cell = $197cd56b15c33885$var$cells[i];\n            // Reset and update cell content and class\n            cell.className = \"field-cell\";\n            if (state[row][column]) {\n                cell.textContent = state[row][column];\n                cell.classList.add(\"field-cell--\".concat(state[row][column]));\n            } else cell.textContent = \"\";\n            i++;\n        }\n        // Update score\n        $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n        // Handle game status messages\n        if (gameStatus === \"win\") $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n        else if (gameStatus === \"lose\") $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n    }\n}\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startBtn.className === \"button restart\") $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$render();\n    $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n    $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    $197cd56b15c33885$var$startBtn.className = \"button restart\";\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        $197cd56b15c33885$var$render();\n    }\n});\n\n})();\n//# sourceMappingURL=index.b26bead2.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst cells = document.querySelectorAll('.field-cell');\nconst startBtn = document.querySelector('.button.start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst startMessage = document.querySelector('.message-start');\nconst gameScore = document.querySelector('.game-score');\n\nfunction render() {\n  const state = game.getState();\n  const gameStatus = game.getStatus();\n\n  // render game cells\n  let i = 0;\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 4; column++) {\n      const cell = cells[i];\n\n      // Reset and update cell content and class\n      cell.className = 'field-cell';\n\n      if (state[row][column]) {\n        cell.textContent = state[row][column];\n        cell.classList.add(`field-cell--${state[row][column]}`);\n      } else {\n        cell.textContent = '';\n      }\n      i++;\n    }\n\n    // Update score\n    gameScore.textContent = game.getScore();\n\n    // Handle game status messages\n    if (gameStatus === 'win') {\n      winMessage.classList.remove('hidden');\n    } else if (gameStatus === 'lose') {\n      loseMessage.classList.remove('hidden');\n    }\n  }\n} \n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.className === 'button restart') {\n    game.restart();\n  }\n\n  game.start();\n  render();\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  startMessage.classList.add('hidden');\n  startBtn.textContent = 'Restart';\n  startBtn.className = 'button restart';\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === 'playing') {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    render();\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = initialState;\n    this.state = this.cloneState(this.initialState);\n  }\n\n  // --- Main Methods ---\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  restart() {\n    this.state = this.cloneState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveUp() {\n    this.handleMove('up');\n  }\n\n  moveDown() {\n    this.handleMove('down');\n  }\n\n  moveLeft() {\n    this.handleMove('left');\n  }\n\n  moveRight() {\n    this.handleMove('right');\n  }\n\n  // --- Additional Methods ---\n  handleMove(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moved = this.slide(direction);\n\n    if (moved) {\n      this.addRandomTile();\n      this.updateGameStatus();\n    }\n  }\n\n  cloneState(state) {\n    return state.map((row) => [...row]);\n  }\n\n  addRandomTile() {\n    const emptyTiles = this.findEmptyTiles();\n\n    if (emptyTiles.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyTiles.length);\n      const [row, column] = emptyTiles[randomIndex];\n\n      this.state[row][column] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  findEmptyTiles() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          emptyTiles.push([row, col]);\n        }\n      }\n    }\n\n    return emptyTiles;\n  }\n\n  slide(direction) {\n    const originalState = this.cloneState(this.state);\n\n    switch (direction) {\n      case 'left':\n        this.state = this.slideLeft(this.state);\n        break;\n      case 'right':\n        this.state = this.slideRight(this.state);\n        break;\n      case 'up':\n        this.state = this.transpose(this.slideLeft(this.transpose(this.state)));\n        break;\n      case 'down':\n        this.state = this.transpose(\n          this.slideRight(this.transpose(this.state)),\n        );\n        break;\n    }\n\n    return !this.areStatesEqual(this.state, originalState);\n  }\n\n  slideLeft(state) {\n    return state.map((row) => this.processRow(row, true));\n  }\n\n  slideRight(state) {\n    return state.map((row) => this.processRow(row, false));\n  }\n\n  processRow(row, isLeft) {\n    const rowCopy = isLeft ? row : [...row].reverse();\n    const newRow = this.mergeTiles(rowCopy.filter((n) => n !== 0));\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    return isLeft ? newRow : newRow.reverse();\n  }\n\n  mergeTiles(row) {\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i] === row[i + 1]) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n        this.score += row[i];\n      }\n    }\n\n    return row.filter((n) => n !== 0);\n  }\n\n  areStatesEqual(state1, state2) {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (state1[row][col] !== state2[row][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  transpose(state) {\n    const transposed = [];\n\n    for (let col = 0; col < 4; col++) {\n      transposed[col] = [];\n\n      for (let row = 0; row < 4; row++) {\n        transposed[col].push(state[row][col]);\n      }\n    }\n\n    return transposed;\n  }\n\n  // --- Game Status Updates ---\n  updateGameStatus() {\n    if (this.hasReached2048()) {\n      this.status = 'win';\n\n      return;\n    }\n\n    if (!this.hasEmptyCells() && !this.canMergeTiles()) {\n      this.status = 'lose';\n    }\n  }\n\n  hasReached2048() {\n    return this.state.some((row) => row.includes(2048));\n  }\n\n  hasEmptyCells() {\n    return this.state.some((row) => row.includes(0));\n  }\n\n  canMergeTiles() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const tile = this.state[row][col];\n\n        if (\n          (col < 3 && tile === this.state[row][col + 1]) ||\n          (row < 3 && tile === this.state[row + 1][col])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","score","status","state","cloneState","key","value","addRandomTile","handleMove","direction","slide","updateGameStatus","map","row","emptyTiles","findEmptyTiles","randomIndex","Math","floor","random","_emptyTiles_randomIndex","_s","_e","_i","_arr","_n","_d","next","done","push","err","column","col","originalState","slideLeft","slideRight","transpose","areStatesEqual","_this","processRow","isLeft","rowCopy","reverse","newRow","mergeTiles","filter","state1","state2","transposed","hasReached2048","hasEmptyCells","canMergeTiles","some","includes","tile","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$startBtn","querySelector","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$render","getState","gameStatus","getStatus","cell","className","textContent","classList","add","concat","getScore","remove","addEventListener","restart","start","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.b26bead2.js.map"}